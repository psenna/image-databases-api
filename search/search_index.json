{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Image Database Api Api para a gerencia de imagens em bases de dados. Bibliotecas utilizadas FastApi Ormar(ORM) Alembique(DB Migrations)","title":"Image Database Api"},{"location":"#image-database-api","text":"Api para a gerencia de imagens em bases de dados.","title":"Image Database Api"},{"location":"#bibliotecas-utilizadas","text":"FastApi Ormar(ORM) Alembique(DB Migrations)","title":"Bibliotecas utilizadas"},{"location":"configuracoes/","text":"Configura\u00e7\u00e3o A api \u00e9 configurada utilizando vari\u00e1vei de ambiente. Vari\u00e1veis de ambiente PROJECT_NAME (Padr\u00e3o: ImageDatasetApi): Nome do projeto SECRET_KEY (Padr\u00e3o: valor aleat\u00f3rio): Chave utilizada na asinatura do token JWT. DATABASE_URL (Padr\u00e3o: sqlite:///db.sqlite): URL para a conex\u00e3o com o banco de dados. TEST_DATABASE (Padr\u00e3o: False): Indica se o banco de dados est\u00e1 sendo utilizado para testes. Se for verdadeiro, o banco n\u00e3o ir\u00e1 persistir os dados. ACCESS_TOKEN_EXPIRE_HOURS (Padr\u00e3o: 24): Validade do token JWT. THUMBNAIL_SIZE (Padr\u00e3o: 36): Tamanho do maior lado da imagem gerada para o thumbnail. ADMIN_PASSWORD (Padr\u00e3o: admin): Password gerado para o admin criado durante a cria\u00e7\u00e3o do sistema.","title":"Configura\u00e7\u00e3o"},{"location":"configuracoes/#configuracao","text":"A api \u00e9 configurada utilizando vari\u00e1vei de ambiente.","title":"Configura\u00e7\u00e3o"},{"location":"configuracoes/#variaveis-de-ambiente","text":"PROJECT_NAME (Padr\u00e3o: ImageDatasetApi): Nome do projeto SECRET_KEY (Padr\u00e3o: valor aleat\u00f3rio): Chave utilizada na asinatura do token JWT. DATABASE_URL (Padr\u00e3o: sqlite:///db.sqlite): URL para a conex\u00e3o com o banco de dados. TEST_DATABASE (Padr\u00e3o: False): Indica se o banco de dados est\u00e1 sendo utilizado para testes. Se for verdadeiro, o banco n\u00e3o ir\u00e1 persistir os dados. ACCESS_TOKEN_EXPIRE_HOURS (Padr\u00e3o: 24): Validade do token JWT. THUMBNAIL_SIZE (Padr\u00e3o: 36): Tamanho do maior lado da imagem gerada para o thumbnail. ADMIN_PASSWORD (Padr\u00e3o: admin): Password gerado para o admin criado durante a cria\u00e7\u00e3o do sistema.","title":"Vari\u00e1veis de ambiente"},{"location":"executando_a_api/com_docker/","text":"Executando com docker para desenvolvimento Para executar a api com docker no modo de desenvolvimento, rode o comando abaixo na raiz do projeto. docker run --rm -it -u $UID:$UID -p 5000:5000 -v $(pwd):/app python:3.10-slim-buster bash No terminal do container, rode esses comandos para criar o venv e instalar as depend\u00eancias: cd /app python3 -m venv env source env/bin/activate pip3 install -r requirements-dev.txt Para configurar a aplica\u00e7\u00e3o, rode o script configure_app, ser\u00e1 criado um usu\u00e1rio admin@mail.com com senha igual a vari\u00e1vel de ambiente ADMIN_PASSWORD . Caso a vari\u00e1vel de ambiente n\u00e3o seja atribuida, a senha padr\u00e3o \u00e9 admin. Por padr\u00e3o, o banco utilizado ser\u00e1 o SQLite criado no arquivo db.sqlite. Caso queira utilizar outro arquivo, sobrescreva a vari\u00e1vel de ambiente DATABASE_URL python3 configure_app.py Para executar a api, rode o comando: python3 main.py A documenta\u00e7\u00e3o da api pode ser acessada pelo navegador no http://localhost:5000/docs","title":"Executando com docker para desenvolvimento"},{"location":"executando_a_api/com_docker/#executando-com-docker-para-desenvolvimento","text":"Para executar a api com docker no modo de desenvolvimento, rode o comando abaixo na raiz do projeto. docker run --rm -it -u $UID:$UID -p 5000:5000 -v $(pwd):/app python:3.10-slim-buster bash No terminal do container, rode esses comandos para criar o venv e instalar as depend\u00eancias: cd /app python3 -m venv env source env/bin/activate pip3 install -r requirements-dev.txt Para configurar a aplica\u00e7\u00e3o, rode o script configure_app, ser\u00e1 criado um usu\u00e1rio admin@mail.com com senha igual a vari\u00e1vel de ambiente ADMIN_PASSWORD . Caso a vari\u00e1vel de ambiente n\u00e3o seja atribuida, a senha padr\u00e3o \u00e9 admin. Por padr\u00e3o, o banco utilizado ser\u00e1 o SQLite criado no arquivo db.sqlite. Caso queira utilizar outro arquivo, sobrescreva a vari\u00e1vel de ambiente DATABASE_URL python3 configure_app.py Para executar a api, rode o comando: python3 main.py A documenta\u00e7\u00e3o da api pode ser acessada pelo navegador no http://localhost:5000/docs","title":"Executando com docker para desenvolvimento"},{"location":"executando_a_api/docker_composer_prod/","text":"Executando com docker-compose Para rodar a build da api com o docker-compose, rode esse comando na pasta principal do projeto: sudo docker-compose -f docker/docker-compose.prod.yml up Para mudar as configura\u00e7\u00e3o, entre no arquivo docker/docker-compose.prod.yml e altere a se\u00e7\u00e3o enviroment do arquivo. A api estar\u00e1 dispon\u00edvel em http://localhost:8080","title":"Executando com docker-compose"},{"location":"executando_a_api/docker_composer_prod/#executando-com-docker-compose","text":"Para rodar a build da api com o docker-compose, rode esse comando na pasta principal do projeto: sudo docker-compose -f docker/docker-compose.prod.yml up Para mudar as configura\u00e7\u00e3o, entre no arquivo docker/docker-compose.prod.yml e altere a se\u00e7\u00e3o enviroment do arquivo. A api estar\u00e1 dispon\u00edvel em http://localhost:8080","title":"Executando com docker-compose"},{"location":"executando_a_api/executando_o_script/","text":"Rodando o script Na pasta scripts do projeto existe um exemplo de intera\u00e7\u00e3o com a api. Ele ir\u00e1 fazer o upload de uma parsta contendo uma base de imagens. \u00c9 muito comum que bases de imagens utilizadas para a classiofica\u00e7\u00e3o sejam disponibilizadas em uma pasta contendo outras pastas. Essas pastas internas representam as classes das imagens que est\u00e3o dentro delas. O script upload_dataset.py pega uma pasta com esse formato, cria uma base de imagens na api e para cada uma das pastas internas ele cria uma label com o nome da pasta e faz o upload das imagens dentro dela para a base de dados, a marcando com a label da pasta. As configura\u00e7\u00e3o do script s\u00e3o feitas por vari\u00e1vei de ambiente, por padr\u00e3o ele vai fazer o upload da base na pasta example que cont\u00e9m 3 classes e 6 imagens. Configura\u00e7\u00f5es USER_MAIL (Padr\u00e3o: admin@mail.com): Email do usu\u00e1rio que ser\u00e1 utilizado para fazer login na api. USER_PASSWORD (Padr\u00e3o: admin): Senha do usu\u00e1rio para fazer login na api. DATASET_DIRECTORY (Padr\u00e3o: ./example): Caminho para a pasta da base de dados API_URL (Padr\u00e3o: http://127.0.0.1:5000): URL da api DATASET_NAME (Padr\u00e3o: gorgeous_dataset): Nome da base que ser\u00e1 criada na api Rodando o script Na raiz do projeto crie um venv e instale as depend\u00eancias do projeto. python3 -m venv env source env/bin/activate pip3 install -r requirements-dev.txt Coloque a api para rodar e verifique que a url para acess\u00e1 la. Depois entre na pasta do script e o execute com esses comandos: cd scripts python3 upload_dataset.py Caso queira mudar as vari\u00e1veis, utilize essa estrat\u00e9gia: API_URL=localhost:8080 USER_MAIL=asd@mail.com python3 upload_dataset.py Exemplo da sa\u00edda gerada:","title":"Rodando o script"},{"location":"executando_a_api/executando_o_script/#rodando-o-script","text":"Na pasta scripts do projeto existe um exemplo de intera\u00e7\u00e3o com a api. Ele ir\u00e1 fazer o upload de uma parsta contendo uma base de imagens. \u00c9 muito comum que bases de imagens utilizadas para a classiofica\u00e7\u00e3o sejam disponibilizadas em uma pasta contendo outras pastas. Essas pastas internas representam as classes das imagens que est\u00e3o dentro delas. O script upload_dataset.py pega uma pasta com esse formato, cria uma base de imagens na api e para cada uma das pastas internas ele cria uma label com o nome da pasta e faz o upload das imagens dentro dela para a base de dados, a marcando com a label da pasta. As configura\u00e7\u00e3o do script s\u00e3o feitas por vari\u00e1vei de ambiente, por padr\u00e3o ele vai fazer o upload da base na pasta example que cont\u00e9m 3 classes e 6 imagens.","title":"Rodando o script"},{"location":"executando_a_api/executando_o_script/#configuracoes","text":"USER_MAIL (Padr\u00e3o: admin@mail.com): Email do usu\u00e1rio que ser\u00e1 utilizado para fazer login na api. USER_PASSWORD (Padr\u00e3o: admin): Senha do usu\u00e1rio para fazer login na api. DATASET_DIRECTORY (Padr\u00e3o: ./example): Caminho para a pasta da base de dados API_URL (Padr\u00e3o: http://127.0.0.1:5000): URL da api DATASET_NAME (Padr\u00e3o: gorgeous_dataset): Nome da base que ser\u00e1 criada na api","title":"Configura\u00e7\u00f5es"},{"location":"executando_a_api/executando_o_script/#rodando-o-script_1","text":"Na raiz do projeto crie um venv e instale as depend\u00eancias do projeto. python3 -m venv env source env/bin/activate pip3 install -r requirements-dev.txt Coloque a api para rodar e verifique que a url para acess\u00e1 la. Depois entre na pasta do script e o execute com esses comandos: cd scripts python3 upload_dataset.py Caso queira mudar as vari\u00e1veis, utilize essa estrat\u00e9gia: API_URL=localhost:8080 USER_MAIL=asd@mail.com python3 upload_dataset.py Exemplo da sa\u00edda gerada:","title":"Rodando o script"},{"location":"executando_a_api/sem_docker/","text":"Executando a api sem docker Na pasta ra\u00edz do projeto, em um terminal com python 3 rode os seguintes comandos: python3 -m venv env source env/bin/activate pip3 install -r requirements-dev.txt Caso seja windows, os comandos podem ser diferentes, se estiver no cmd tente os seguintes comnados: python -m venv env env\\Scripts\\activate.bat pip install -r requirements-dev.txt Para configurar a aplica\u00e7\u00e3o, rode o script configure_app, ser\u00e1 criado um usu\u00e1rio admin@mail.com com senha igual a vari\u00e1vel de ambiente ADMIN_PASSWORD . Caso a vari\u00e1vel de ambiente n\u00e3o seja atribuida, a senha padr\u00e3o \u00e9 admin. Por padr\u00e3o, o banco utilizado ser\u00e1 o SQLite criado no arquivo db.sqlite. Caso queira utilizar outro arquivo, sobrescreva a vari\u00e1vel de ambiente DATABASE_URL python3 configure_app.py Para executar a api, rode o comando: python3 main.py A documenta\u00e7\u00e3o da api pode ser acessada pelo navegador no http://localhost:5000/docs","title":"Executando a api sem docker"},{"location":"executando_a_api/sem_docker/#executando-a-api-sem-docker","text":"Na pasta ra\u00edz do projeto, em um terminal com python 3 rode os seguintes comandos: python3 -m venv env source env/bin/activate pip3 install -r requirements-dev.txt Caso seja windows, os comandos podem ser diferentes, se estiver no cmd tente os seguintes comnados: python -m venv env env\\Scripts\\activate.bat pip install -r requirements-dev.txt Para configurar a aplica\u00e7\u00e3o, rode o script configure_app, ser\u00e1 criado um usu\u00e1rio admin@mail.com com senha igual a vari\u00e1vel de ambiente ADMIN_PASSWORD . Caso a vari\u00e1vel de ambiente n\u00e3o seja atribuida, a senha padr\u00e3o \u00e9 admin. Por padr\u00e3o, o banco utilizado ser\u00e1 o SQLite criado no arquivo db.sqlite. Caso queira utilizar outro arquivo, sobrescreva a vari\u00e1vel de ambiente DATABASE_URL python3 configure_app.py Para executar a api, rode o comando: python3 main.py A documenta\u00e7\u00e3o da api pode ser acessada pelo navegador no http://localhost:5000/docs","title":"Executando a api sem docker"}]}